(()=>{
"use strict";var $=(()=>{var __create=Object.create;var __defProp=Object.defineProperty;var __getOwnPropDesc=Object.getOwnPropertyDescriptor;var __getOwnPropNames=Object.getOwnPropertyNames;var __getProtoOf=Object.getPrototypeOf,__hasOwnProp=Object.prototype.hasOwnProperty;var __commonJS=(cb,mod)=>function(){return mod||(0,cb[__getOwnPropNames(cb)[0]])((mod={exports:{}}).exports,mod),mod.exports};var __export=(target,all)=>{for(var name in all)__defProp(target,name,{get:all[name],enumerable:!0})},__copyProps=(to,from,except,desc)=>{if(from&&typeof from=="object"||typeof from=="function")for(var keys=__getOwnPropNames(from),i=0,n=keys.length,key;i<n;i++)key=keys[i],!__hasOwnProp.call(to,key)&&key!==except&&__defProp(to,key,{get:(k=>from[k]).bind(null,key),enumerable:!(desc=__getOwnPropDesc(from,key))||desc.enumerable});return to};var __toESM=(mod,isNodeMode,target)=>(target=mod!=null?__create(__getProtoOf(mod)):{},__copyProps(isNodeMode||!mod||!mod.__esModule?__defProp(target,"default",{value:mod,enumerable:!0}):target,mod)),__toCommonJS=mod=>__copyProps(__defProp({},"__esModule",{value:!0}),mod);var require_metro=__commonJS({"vendetta:@vendetta/metro"(exports,module){module.exports=vendetta.metro}});var require_common=__commonJS({"vendetta:@vendetta/metro/common"(exports,module){module.exports=vendetta.metro.common}});var require_patcher=__commonJS({"vendetta:@vendetta/patcher"(exports,module){module.exports=vendetta.patcher}});var require_plugin=__commonJS({"vendetta:@vendetta/plugin"(exports,module){module.exports=vendetta.plugin}});var require_components=__commonJS({"vendetta:@vendetta/ui/components"(exports,module){module.exports=vendetta.ui.components}});var require_assets=__commonJS({"vendetta:@vendetta/ui/assets"(exports,module){module.exports=vendetta.ui.assets}});var require_storage=__commonJS({"vendetta:@vendetta/storage"(exports,module){module.exports=vendetta.storage}});var src_exports={};__export(src_exports,{onUnload:()=>onUnload,settings:()=>Settings_default});var import_metro=__toESM(require_metro(),1),import_common2=__toESM(require_common(),1),import_patcher=__toESM(require_patcher(),1),import_plugin2=__toESM(require_plugin(),1);var import_common=__toESM(require_common(),1),import_components=__toESM(require_components(),1),import_assets=__toESM(require_assets(),1),import_plugin=__toESM(require_plugin(),1),import_storage=__toESM(require_storage(),1),{FormIcon,FormSwitchRow}=import_components.Forms;import_plugin.storage.nopk??=!1;var Settings_default=()=>((0,import_storage.useProxy)(import_plugin.storage),React.createElement(import_common.ReactNative.ScrollView,null,React.createElement(FormSwitchRow,{label:"Ignore PluralKit",leading:React.createElement(FormIcon,{source:(0,import_assets.getAssetIDByName)("ic_block")}),onValueChange:v=>void(import_plugin.storage.nopk=v),value:import_plugin.storage.nopk})));var patches=[],ChannelMessages=(0,import_metro.findByProps)("_channelMessages"),MessageRecordUtils=(0,import_metro.findByProps)("updateMessageRecord","createMessageRecord"),MessageRecord=(0,import_metro.findByName)("MessageRecord",!1),RowManager=(0,import_metro.findByName)("RowManager");patches.push((0,import_patcher.before)("dispatch",import_common2.FluxDispatcher,([event])=>{if(event.type==="MESSAGE_DELETE"){if(event.__vml_cleanup)return event;var channel=ChannelMessages.get(event.channelId),message=channel?.get(event.id);return!message||message.author?.id=="1"||message.state=="SEND_FAILED"?event:(import_plugin2.storage.nopk&&fetch(`https://api.pluralkit.me/v2/messages/${encodeURIComponent(message.id)}`).then(res=>res.json()).then(data=>{message.id===data.original&&!data.member?.keep_proxy&&import_common2.FluxDispatcher.dispatch({type:"MESSAGE_DELETE",id:message.id,channelId:message.channel_id,__vml_cleanup:!0})}),[{message:{...message.toJS(),__vml_deleted:!0},type:"MESSAGE_UPDATE"}])}}));patches.push((0,import_patcher.after)("generate",RowManager.prototype,([data],row)=>{data.rowType===1&&data.message.__vml_deleted&&(row.message.edited="deleted",row.message.state="SEND_FAILED")}));patches.push((0,import_patcher.instead)("updateMessageRecord",MessageRecordUtils,function([oldRecord,newRecord],orig){return newRecord.__vml_deleted?MessageRecordUtils.createMessageRecord(newRecord,oldRecord.reactions):orig.apply(this,[oldRecord,newRecord])}));patches.push((0,import_patcher.after)("createMessageRecord",MessageRecordUtils,function([message],record){record.__vml_deleted=message.__vml_deleted}));patches.push((0,import_patcher.after)("default",MessageRecord,([props],record)=>{record.__vml_deleted=!!props.__vml_deleted}));var onUnload=()=>{patches.forEach(unpatch=>unpatch());for(var channelId in ChannelMessages._channelMessages)for(var message of ChannelMessages._channelMessages[channelId]._array)message.__vml_deleted&&import_common2.FluxDispatcher.dispatch({type:"MESSAGE_DELETE",id:message.id,channelId:message.channel_id,__vml_cleanup:!0})};return __toCommonJS(src_exports);})();
return $;})();
